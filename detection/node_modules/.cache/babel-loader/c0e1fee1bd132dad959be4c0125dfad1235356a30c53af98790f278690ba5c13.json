{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91635\\\\Desktop\\\\PythonEvn\\\\env\\\\detection\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [extractedText, setExtractedText] = useState('');\n  const [jsonData, setJsonData] = useState(null);\n  const [ocrData, setOcrData] = useState([]);\n  const [imageUrl, setImageUrl] = useState(null);\n  useEffect(() => {\n    // Fetch OCR data when the component mounts\n    fetchOcrData();\n  }, []);\n  const handleClear = () => {\n    setSelectedFile(null);\n    setImageUrl(null);\n    setExtractedText('');\n    setJsonData(null);\n  };\n  const handleFileChange = e => {\n    setSelectedFile(e.target.files[0]);\n    setImageUrl(URL.createObjectURL(e.target.files[0]));\n  };\n  const handleUpload = () => {\n    if (!selectedFile) return;\n    const formData = new FormData();\n    formData.append('image', selectedFile);\n    axios.post('http://localhost:5000/upload', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(response => {\n      setExtractedText(response.data.text);\n      const lines = response.data.text.split('\\n');\n      const parsedData = parseExtractedText(lines);\n      setJsonData(parsedData);\n\n      // Send the JSON data string to the server\n      axios.post('http://localhost:5000/uploadJson', {\n        jsonData: JSON.stringify(parsedData, null, 2)\n      }).then(serverResponse => {\n        console.log(serverResponse.data.message);\n\n        // Fetch updated OCR data after upload\n        fetchOcrData();\n      }).catch(error => console.error(error));\n    }).catch(error => console.error(error));\n  };\n  const parseExtractedText = lines => {\n    const jsonData = {\n      identification_number: extractValue(lines, /\\b(\\d{1,4}\\s*){5,}\\d{1,4}\\b/),\n      name: extractValue(lines, /Name\\s*([\\s\\n]*[A-Za-z]+\\s[A-Za-z]+)/, 'Name'),\n      last_name: extractValue(lines, /Last [nN]ame\\s*([\\s\\n]*[A-Za-z]+)/, 'Last name'),\n      date_of_birth: extractValue(lines, /\\d{1,2}\\s[A-Za-z]+\\s\\d{4}/, 'Date of Birth'),\n      date_of_issue: extractLineAbove(lines, 'Date of Issue'),\n      date_of_expiry: extractLineAbove(lines, 'Date of Expiry')\n    };\n    if (!jsonData.last_name) {\n      jsonData.last_name = extractLineAbove(lines, 'Last Name');\n    }\n    if (!jsonData.name) {\n      jsonData.name = extractLineBelow(lines, 'Name');\n      console.log('Name field is empty.');\n    }\n    if (!jsonData.date_of_birth) {\n      jsonData.date_of_birth = extractLineBelow(lines, 'Date of Birth');\n    }\n    return jsonData;\n  };\n  const extractLineAbove = (lines, keyword) => {\n    for (let i = 1; i < lines.length; i++) {\n      if (lines[i].includes(keyword)) {\n        return lines[i - 1].trim(); // Return the line above the \"Date of Issue\"\n      }\n    }\n    return '';\n  };\n  const extractLineBelow = (lines, keyword) => {\n    for (let i = 0; i < lines.length - 1; i++) {\n      if (lines[i].includes(keyword)) {\n        return lines[i + 1].trim(); // Return the line below the keyword\n      }\n    }\n    return '';\n  };\n  const extractValue = (lines, regex, removeWord) => {\n    const line = lines.find(line => regex.test(line));\n    if (line) {\n      const value = line.replace(removeWord, '').trim();\n      return value;\n    }\n    return \"\";\n  };\n  const fetchOcrData = () => {\n    // Fetch OCR data from the server\n    axios.get('http://localhost:5000/ocrData').then(response => {\n      setOcrData(response.data);\n    }).catch(error => console.error(error));\n  };\n  const handleCreate = () => {\n    // Prompt the user for OCR data\n    const identificationNumber = prompt('Enter Identification Number:');\n    const name = prompt('Enter Name:');\n    const lastName = prompt('Enter Last Name:');\n    const dateOfBirth = prompt('Enter Date of Birth:');\n    const dateOfIssue = prompt('Enter Date of Issue:');\n    const dateOfExpiry = prompt('Enter Date of Expiry:');\n\n    // Check if the user clicked Cancel or entered empty values\n    if (identificationNumber === null || name === null || lastName === null || dateOfBirth === null || dateOfIssue === null || dateOfExpiry === null) {\n      // User canceled or entered empty values\n      return;\n    }\n\n    // Create a new OCR data object\n    const newOcrData = {\n      identification_number: identificationNumber,\n      name: name,\n      last_name: lastName,\n      date_of_birth: dateOfBirth,\n      date_of_issue: dateOfIssue,\n      date_of_expiry: dateOfExpiry\n    };\n\n    // Send the new OCR data to the server\n    axios.post('http://localhost:5000/ocrData', newOcrData).then(response => {\n      console.log(response.data.message);\n      // Fetch updated OCR data after creating a new entry\n      fetchOcrData();\n    }).catch(error => console.error(error));\n  };\n  const handleUpdate = id => {\n    // Find the OCR data by ID\n    const dataToUpdate = ocrData.find(data => data._id === id);\n\n    // Prompt the user for updated values\n    const updatedIdentificationNumber = prompt('Enter updated Identification Number:', dataToUpdate.identification_number);\n    const updatedName = prompt('Enter updated Name:', dataToUpdate.name);\n    const updatedLastName = prompt('Enter updated Last Name:', dataToUpdate.last_name);\n    const updatedDateOfBirth = prompt('Enter updated Date of Birth:', dataToUpdate.date_of_birth);\n    const updatedDateOfIssue = prompt('Enter updated Date of Issue:', dataToUpdate.date_of_issue);\n    const updatedDateOfExpiry = prompt('Enter updated Date of Expiry:', dataToUpdate.date_of_expiry);\n\n    // Check if the user clicked Cancel or entered empty values\n    if (updatedIdentificationNumber === null || updatedName === null || updatedLastName === null || updatedDateOfBirth === null || updatedDateOfIssue === null || updatedDateOfExpiry === null) {\n      // User canceled or entered empty values\n      return;\n    }\n\n    // Example: Update identification number, name, last name, date of birth, date of issue, date of expiry\n    const updatedData = {\n      ...dataToUpdate,\n      identification_number: updatedIdentificationNumber,\n      name: updatedName,\n      last_name: updatedLastName,\n      date_of_birth: updatedDateOfBirth,\n      date_of_issue: updatedDateOfIssue,\n      date_of_expiry: updatedDateOfExpiry\n    };\n\n    // Send the updated data to the server\n    axios.put(`http://localhost:5000/ocrData/${id}`, updatedData).then(response => {\n      console.log(response.data.message);\n      // Fetch updated OCR data after update\n      fetchOcrData();\n    }).catch(error => console.error(error));\n  };\n  const handleDelete = id => {\n    // Confirm the deletion with the user\n    const confirmDeletion = window.confirm('Are you sure you want to delete this data?');\n    if (confirmDeletion) {\n      // Send a request to delete the data by ID\n      axios.delete(`http://localhost:5000/ocrData/${id}`).then(response => {\n        console.log(response.data.message);\n        // Fetch updated OCR data after deletion\n        fetchOcrData();\n      }).catch(error => console.error(error));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mb-4\",\n      children: \"Vision API OCR\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"first\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6 mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Uploaded Image:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 19\n          }, this), imageUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: imageUrl,\n            alt: \"Uploaded\",\n            style: {\n              maxWidth: '100%',\n              maxHeight: '400px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 23\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border border-primary\",\n            style: {\n              height: '400px',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-primary\",\n              children: \"Select an image to upload\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6 mb-5\",\n        style: {\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"JSON Data:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          style: {\n            fontSize: '16px',\n            lineHeight: '2.6'\n          },\n          children: JSON.stringify(jsonData, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3 d-flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary ms-2 flex-shrink-0\",\n        onClick: handleUpload,\n        children: \"Upload and Process\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-danger ms-auto\",\n        onClick: handleClear,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"History:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-group\",\n        children: ocrData.map(data => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item d-flex justify-content-between align-items-center\",\n          children: [`ID: ${data._id}, Identification Number: ${data.identification_number}, Name: ${data.name}, Date of Birth: ${data.date_of_birth}`, /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-warning me-2\",\n              onClick: () => handleUpdate(data._id),\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-danger\",\n              onClick: () => handleDelete(data._id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 25\n          }, this)]\n        }, data._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success mt-3\",\n        onClick: handleCreate,\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 231,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"oO4HJrfb8IOuVqq8oYEEzxAow58=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","selectedFile","setSelectedFile","extractedText","setExtractedText","jsonData","setJsonData","ocrData","setOcrData","imageUrl","setImageUrl","fetchOcrData","handleClear","handleFileChange","e","target","files","URL","createObjectURL","handleUpload","formData","FormData","append","post","headers","then","response","data","text","lines","split","parsedData","parseExtractedText","JSON","stringify","serverResponse","console","log","message","catch","error","identification_number","extractValue","name","last_name","date_of_birth","date_of_issue","extractLineAbove","date_of_expiry","extractLineBelow","keyword","i","length","includes","trim","regex","removeWord","line","find","test","value","replace","get","handleCreate","identificationNumber","prompt","lastName","dateOfBirth","dateOfIssue","dateOfExpiry","newOcrData","handleUpdate","id","dataToUpdate","_id","updatedIdentificationNumber","updatedName","updatedLastName","updatedDateOfBirth","updatedDateOfIssue","updatedDateOfExpiry","updatedData","put","handleDelete","confirmDeletion","window","confirm","delete","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","style","maxWidth","maxHeight","height","display","alignItems","justifyContent","position","fontSize","lineHeight","type","accept","onChange","onClick","map","_c","$RefreshReg$"],"sources":["C:/Users/91635/Desktop/PythonEvn/env/detection/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst App = () => {\n    const [selectedFile, setSelectedFile] = useState(null);\n    const [extractedText, setExtractedText] = useState('');\n    const [jsonData, setJsonData] = useState(null);\n    const [ocrData, setOcrData] = useState([]);\n    const [imageUrl, setImageUrl] = useState(null);\n\n    useEffect(() => {\n        // Fetch OCR data when the component mounts\n        fetchOcrData();\n    }, []);\n\n    const handleClear = () => {\n      setSelectedFile(null);\n      setImageUrl(null);\n      setExtractedText('');\n      setJsonData(null);\n  };\n\n    const handleFileChange = (e) => {\n        setSelectedFile(e.target.files[0]);\n        setImageUrl(URL.createObjectURL(e.target.files[0]));\n    };\n\n    const handleUpload = () => {\n        if (!selectedFile) return;\n\n        const formData = new FormData();\n        formData.append('image', selectedFile);\n\n        axios.post('http://localhost:5000/upload', formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data',\n            },\n        })\n            .then(response => {\n                setExtractedText(response.data.text);\n                const lines = response.data.text.split('\\n');\n                const parsedData = parseExtractedText(lines);\n                setJsonData(parsedData);\n\n                // Send the JSON data string to the server\n                axios.post('http://localhost:5000/uploadJson', { jsonData: JSON.stringify(parsedData, null, 2) })\n                    .then(serverResponse => {\n                        console.log(serverResponse.data.message);\n\n                        // Fetch updated OCR data after upload\n                        fetchOcrData();\n                    })\n                    .catch(error => console.error(error));\n            })\n            .catch(error => console.error(error));\n    };\n\n    const parseExtractedText = (lines) => {\n        const jsonData = {\n            identification_number: extractValue(lines, /\\b(\\d{1,4}\\s*){5,}\\d{1,4}\\b/),\n            name: extractValue(lines, /Name\\s*([\\s\\n]*[A-Za-z]+\\s[A-Za-z]+)/, 'Name'),\n            last_name: extractValue(lines, /Last [nN]ame\\s*([\\s\\n]*[A-Za-z]+)/, 'Last name'),\n            date_of_birth: extractValue(lines, /\\d{1,2}\\s[A-Za-z]+\\s\\d{4}/, 'Date of Birth'),\n            date_of_issue: extractLineAbove(lines, 'Date of Issue'),\n            date_of_expiry: extractLineAbove(lines, 'Date of Expiry'),\n        };\n        \n        if (!jsonData.last_name) {\n          jsonData.last_name=extractLineAbove(lines, 'Last Name');\n          \n        }\n\n        if (!jsonData.name) {\n          jsonData.name=extractLineBelow(lines, 'Name');\n          console.log('Name field is empty.');\n        }\n\n        if(!jsonData.date_of_birth)\n        {\n          jsonData.date_of_birth=extractLineBelow(lines, 'Date of Birth')\n        }\n        return jsonData;\n    };\n\n    const extractLineAbove = (lines, keyword) => {\n        for (let i = 1; i < lines.length; i++) {\n            if (lines[i].includes(keyword)) {\n                return lines[i - 1].trim(); // Return the line above the \"Date of Issue\"\n            }\n        }\n        return '';\n    };\n\n    const extractLineBelow = (lines, keyword) => {\n      for (let i = 0; i < lines.length - 1; i++) {\n          if (lines[i].includes(keyword)) {\n              return lines[i + 1].trim(); // Return the line below the keyword\n          }\n      }\n      return '';\n  };\n  \n\n    const extractValue = (lines, regex, removeWord) => {\n        const line = lines.find((line) => regex.test(line));\n        if (line) {\n            const value = line.replace(removeWord, '').trim();\n            return value;\n        }\n        return \"\";\n    };\n\n    const fetchOcrData = () => {\n        // Fetch OCR data from the server\n        axios.get('http://localhost:5000/ocrData')\n            .then(response => {\n                setOcrData(response.data);\n            })\n            .catch(error => console.error(error));\n    };\n    const handleCreate = () => {\n      // Prompt the user for OCR data\n      const identificationNumber = prompt('Enter Identification Number:');\n      const name = prompt('Enter Name:');\n      const lastName = prompt('Enter Last Name:');\n      const dateOfBirth = prompt('Enter Date of Birth:');\n      const dateOfIssue = prompt('Enter Date of Issue:');\n      const dateOfExpiry = prompt('Enter Date of Expiry:');\n  \n      // Check if the user clicked Cancel or entered empty values\n      if (\n          identificationNumber === null ||\n          name === null ||\n          lastName === null ||\n          dateOfBirth === null ||\n          dateOfIssue === null ||\n          dateOfExpiry === null\n      ) {\n          // User canceled or entered empty values\n          return;\n      }\n  \n      // Create a new OCR data object\n      const newOcrData = {\n          identification_number: identificationNumber,\n          name: name,\n          last_name: lastName,\n          date_of_birth: dateOfBirth,\n          date_of_issue: dateOfIssue,\n          date_of_expiry: dateOfExpiry,\n      };\n  \n      // Send the new OCR data to the server\n      axios.post('http://localhost:5000/ocrData', newOcrData)\n          .then(response => {\n              console.log(response.data.message);\n              // Fetch updated OCR data after creating a new entry\n              fetchOcrData();\n          })\n          .catch(error => console.error(error));\n  };\n  \n\n    const handleUpdate = (id) => {\n      // Find the OCR data by ID\n      const dataToUpdate = ocrData.find(data => data._id === id);\n  \n      // Prompt the user for updated values\n      const updatedIdentificationNumber = prompt('Enter updated Identification Number:', dataToUpdate.identification_number);\n      const updatedName = prompt('Enter updated Name:', dataToUpdate.name);\n      const updatedLastName = prompt('Enter updated Last Name:', dataToUpdate.last_name);\n      const updatedDateOfBirth = prompt('Enter updated Date of Birth:', dataToUpdate.date_of_birth);\n      const updatedDateOfIssue = prompt('Enter updated Date of Issue:', dataToUpdate.date_of_issue);\n      const updatedDateOfExpiry = prompt('Enter updated Date of Expiry:', dataToUpdate.date_of_expiry);\n  \n      // Check if the user clicked Cancel or entered empty values\n      if (\n          updatedIdentificationNumber === null ||\n          updatedName === null ||\n          updatedLastName === null ||\n          updatedDateOfBirth === null ||\n          updatedDateOfIssue === null ||\n          updatedDateOfExpiry === null\n      ) {\n          // User canceled or entered empty values\n          return;\n      }\n  \n      // Example: Update identification number, name, last name, date of birth, date of issue, date of expiry\n      const updatedData = {\n          ...dataToUpdate,\n          identification_number: updatedIdentificationNumber,\n          name: updatedName,\n          last_name: updatedLastName,\n          date_of_birth: updatedDateOfBirth,\n          date_of_issue: updatedDateOfIssue,\n          date_of_expiry: updatedDateOfExpiry,\n      };\n  \n      // Send the updated data to the server\n      axios.put(`http://localhost:5000/ocrData/${id}`, updatedData)\n          .then(response => {\n              console.log(response.data.message);\n              // Fetch updated OCR data after update\n              fetchOcrData();\n          })\n          .catch(error => console.error(error));\n  };\n  \n  \n\n    const handleDelete = (id) => {\n      // Confirm the deletion with the user\n      const confirmDeletion = window.confirm('Are you sure you want to delete this data?');\n\n      if (confirmDeletion) {\n          // Send a request to delete the data by ID\n          axios.delete(`http://localhost:5000/ocrData/${id}`)\n              .then(response => {\n                  console.log(response.data.message);\n                  // Fetch updated OCR data after deletion\n                  fetchOcrData();\n              })\n              .catch(error => console.error(error));\n      }\n  };\n\n\n  return (\n    <div className=\"container mt-5\">\n        <h1 className=\"mb-4\">Vision API OCR</h1>\n        <div className=\"row\">\n          <div className='first'>\n              <div className=\"col-md-6 mb-3\">\n                  <h2>Uploaded Image:</h2>\n                  {imageUrl ? (\n                      <img src={imageUrl} alt=\"Uploaded\" style={{ maxWidth: '100%', maxHeight: '400px' }} />\n                  ) : (\n                      <div className=\"border border-primary\" style={{ height: '400px', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                          <span className=\"text-primary\">Select an image to upload</span>\n                      </div>\n                  )}\n              </div>\n            </div>\n            <div className=\"col-md-6 mb-5\" style={{ position: 'relative' }}>\n                <h2>JSON Data:</h2>\n                <pre style={{ fontSize: '16px', lineHeight: '2.6' }}>{JSON.stringify(jsonData, null, 2)}</pre>\n            </div>\n        </div>\n        <div className=\"mb-3 d-flex\">\n    <input type=\"file\" accept=\"image/*\" onChange={handleFileChange} />\n    <button className=\"btn btn-primary ms-2 flex-shrink-0\" onClick={handleUpload}>Upload and Process</button>\n    <button className=\"btn btn-danger ms-auto\" onClick={handleClear}>Clear</button>\n</div>\n        {/* <div className=\"mb-3\">\n        <button className=\"btn btn-danger\" onClick={handleClear}>Clear</button>\n        </div> */}\n        <div>\n            <h2>History:</h2>\n            {/* ... (rest of your list rendering code) */}\n            <ul className=\"list-group\">\n                {ocrData.map(data => (\n                    <li key={data._id} className=\"list-group-item d-flex justify-content-between align-items-center\">\n                        {`ID: ${data._id}, Identification Number: ${data.identification_number}, Name: ${data.name}, Date of Birth: ${data.date_of_birth}`}\n                        <div>\n                            <button className=\"btn btn-warning me-2\" onClick={() => handleUpdate(data._id)}>Update</button>\n                            <button className=\"btn btn-danger\" onClick={() => handleDelete(data._id)}>Delete</button>\n                        </div>\n                    </li>\n                ))}\n            </ul>\n            <button className=\"btn btn-success mt-3\" onClick={handleCreate}>Create</button>\n        </div>\n    </div>\n);\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
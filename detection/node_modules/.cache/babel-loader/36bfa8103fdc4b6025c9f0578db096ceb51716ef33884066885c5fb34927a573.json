{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91635\\\\Desktop\\\\PythonEvn\\\\env\\\\detection\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [extractedText, setExtractedText] = useState('');\n  const [jsonData, setJsonData] = useState(null);\n  const [ocrData, setOcrData] = useState([]);\n  const [imageUrl, setImageUrl] = useState(null);\n  useEffect(() => {\n    // Fetch OCR data when the component mounts\n    fetchOcrData();\n  }, []);\n  const handleClear = () => {\n    setSelectedFile(null);\n    setImageUrl(null);\n    setExtractedText('');\n    setJsonData(null);\n  };\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n\n    // Check if a file is selected\n    if (file) {\n      // Check the file size (in bytes)\n      const fileSizeInBytes = file.size;\n\n      // Convert the file size to megabytes\n      const fileSizeInMB = fileSizeInBytes / (1024 * 1024);\n\n      // Check if the file size exceeds 2MB\n      if (fileSizeInMB > 2) {\n        alert('Please select an image file that is 2MB or smaller.');\n        setSelectedFile(null);\n        setImageUrl(null);\n        return;\n      }\n      setSelectedFile(e.target.files[0]);\n      setImageUrl(URL.createObjectURL(e.target.files[0]));\n    }\n  };\n  const handleUpload = () => {\n    if (!selectedFile) return;\n    const formData = new FormData();\n    formData.append('image', selectedFile);\n    axios.post('http://localhost:5000/upload', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(response => {\n      setExtractedText(response.data.text);\n      const lines = response.data.text.split('\\n');\n      const parsedData = parseExtractedText(lines);\n      setJsonData(parsedData);\n\n      // Send the JSON data string to the server\n      axios.post('http://localhost:5000/uploadJson', {\n        jsonData: JSON.stringify(parsedData, null, 2)\n      }).then(serverResponse => {\n        console.log(serverResponse.data.message);\n\n        // Fetch updated OCR data after upload\n        fetchOcrData();\n      }).catch(error => console.error(error));\n    }).catch(error => console.error(error));\n  };\n  const parseExtractedText = lines => {\n    const jsonData = {\n      identification_number: extractValue(lines, /\\b(\\d{1,4}\\s*){5,}\\d{1,4}\\b/),\n      name: extractValue(lines, /Name\\s*([\\s\\n]*[A-Za-z]+\\s[A-Za-z]+)/, 'Name'),\n      last_name: extractValue(lines, /Last [nN]ame\\s*([\\s\\n]*[A-Za-z]+)/, 'Last name'),\n      date_of_birth: extractValue(lines, /\\d{1,2}\\s[A-Za-z]+\\s\\d{4}/, 'Date of Birth'),\n      date_of_issue: extractLineAbove(lines, 'Date of Issue'),\n      date_of_expiry: extractLineAbove(lines, 'Date of Expiry')\n    };\n    if (!jsonData.last_name) {\n      jsonData.last_name = extractLineAbove(lines, 'Last Name');\n    }\n    if (!jsonData.name) {\n      jsonData.name = extractLineBelow(lines, 'Name');\n      console.log('Name field is empty.');\n    }\n    if (!jsonData.date_of_birth) {\n      jsonData.date_of_birth = extractLineBelow(lines, 'Date of Birth');\n    }\n    return jsonData;\n  };\n  const extractLineAbove = (lines, keyword) => {\n    for (let i = 1; i < lines.length; i++) {\n      if (lines[i].includes(keyword)) {\n        return lines[i - 1].trim(); // Return the line above the \"Date of Issue\"\n      }\n    }\n    return '';\n  };\n  const extractLineBelow = (lines, keyword) => {\n    for (let i = 0; i < lines.length - 1; i++) {\n      if (lines[i].includes(keyword)) {\n        return lines[i + 1].trim(); // Return the line below the keyword\n      }\n    }\n    return '';\n  };\n  const extractValue = (lines, regex, removeWord) => {\n    const line = lines.find(line => regex.test(line));\n    if (line) {\n      const value = line.replace(removeWord, '').trim();\n      return value;\n    }\n    return \"\";\n  };\n  const fetchOcrData = () => {\n    // Fetch OCR data from the server\n    axios.get('http://localhost:5000/ocrData').then(response => {\n      setOcrData(response.data);\n    }).catch(error => console.error(error));\n  };\n  const handleCreate = () => {\n    // Prompt the user for OCR data\n    const identificationNumber = prompt('Enter Identification Number:');\n    const name = prompt('Enter Name:');\n    const lastName = prompt('Enter Last Name:');\n    const dateOfBirth = prompt('Enter Date of Birth:');\n    const dateOfIssue = prompt('Enter Date of Issue:');\n    const dateOfExpiry = prompt('Enter Date of Expiry:');\n\n    // Check if the user clicked Cancel or entered empty values\n    if (identificationNumber === null || name === null || lastName === null || dateOfBirth === null || dateOfIssue === null || dateOfExpiry === null) {\n      // User canceled or entered empty values\n      return;\n    }\n\n    // Create a new OCR data object\n    const newOcrData = {\n      identification_number: identificationNumber,\n      name: name,\n      last_name: lastName,\n      date_of_birth: dateOfBirth,\n      date_of_issue: dateOfIssue,\n      date_of_expiry: dateOfExpiry\n    };\n\n    // Send the new OCR data to the server\n    axios.post('http://localhost:5000/ocrData', newOcrData).then(response => {\n      console.log(response.data.message);\n      // Fetch updated OCR data after creating a new entry\n      fetchOcrData();\n    }).catch(error => console.error(error));\n  };\n  const handleUpdate = id => {\n    // Find the OCR data by ID\n    const dataToUpdate = ocrData.find(data => data._id === id);\n\n    // Prompt the user for updated values\n    const updatedIdentificationNumber = prompt('Enter updated Identification Number:', dataToUpdate.identification_number);\n    const updatedName = prompt('Enter updated Name:', dataToUpdate.name);\n    const updatedLastName = prompt('Enter updated Last Name:', dataToUpdate.last_name);\n    const updatedDateOfBirth = prompt('Enter updated Date of Birth:', dataToUpdate.date_of_birth);\n    const updatedDateOfIssue = prompt('Enter updated Date of Issue:', dataToUpdate.date_of_issue);\n    const updatedDateOfExpiry = prompt('Enter updated Date of Expiry:', dataToUpdate.date_of_expiry);\n\n    // Check if the user clicked Cancel or entered empty values\n    if (updatedIdentificationNumber === null || updatedName === null || updatedLastName === null || updatedDateOfBirth === null || updatedDateOfIssue === null || updatedDateOfExpiry === null) {\n      // User canceled or entered empty values\n      return;\n    }\n\n    // Example: Update identification number, name, last name, date of birth, date of issue, date of expiry\n    const updatedData = {\n      ...dataToUpdate,\n      identification_number: updatedIdentificationNumber,\n      name: updatedName,\n      last_name: updatedLastName,\n      date_of_birth: updatedDateOfBirth,\n      date_of_issue: updatedDateOfIssue,\n      date_of_expiry: updatedDateOfExpiry\n    };\n\n    // Send the updated data to the server\n    axios.put(`http://localhost:5000/ocrData/${id}`, updatedData).then(response => {\n      console.log(response.data.message);\n      // Fetch updated OCR data after update\n      fetchOcrData();\n    }).catch(error => console.error(error));\n  };\n  const handleDelete = id => {\n    // Confirm the deletion with the user\n    const confirmDeletion = window.confirm('Are you sure you want to delete this data?');\n    if (confirmDeletion) {\n      // Send a request to delete the data by ID\n      axios.delete(`http://localhost:5000/ocrData/${id}`).then(response => {\n        console.log(response.data.message);\n        // Fetch updated OCR data after deletion\n        fetchOcrData();\n      }).catch(error => console.error(error));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    style: {\n      backgroundColor: '#f8f9fa',\n      fontFamily: 'Lucida Console\", \"Courier New\", monospace'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mb-4 text-center\",\n      style: {\n        fontSize: '5rem'\n      },\n      children: \"Vision API OCR\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6 mb-3 pr-md-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Uploaded Image:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 15\n        }, this), imageUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imageUrl,\n          alt: \"Uploaded\",\n          style: {\n            maxWidth: '100%',\n            maxHeight: '400px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 19\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          style: {\n            backgroundColor: '#f4f4f4',\n            height: '400px',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-primary\",\n            children: \"Select an image to upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 3\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6 mb-5\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: '0px 0px 0px 100px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"JSON Data:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            style: {\n              fontSize: '16px',\n              lineHeight: '2.6'\n            },\n            children: JSON.stringify(jsonData, null, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3 d-flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary ms-2 flex-shrink-0\",\n        onClick: handleUpload,\n        children: \"Upload and Process\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-danger ms-auto\",\n        onClick: handleClear,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"History:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-group\",\n        children: ocrData.map(data => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between align-items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"ID:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 30\n                }, this), \" \", data._id]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Identification Number:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 30\n                }, this), \" \", data.identification_number]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Name:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 30\n                }, this), \" \", data.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Last Name:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 30\n                }, this), \" \", data.last_name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Date of Birth:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 30\n                }, this), \" \", data.date_of_birth]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Date of Issue:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 30\n                }, this), \" \", data.date_of_issue]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Date of Expiry:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 30\n                }, this), \" \", data.date_of_expiry]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex flex-column align-items-end\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-warning mb-2\",\n                onClick: () => handleUpdate(data._id),\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-danger\",\n                onClick: () => handleDelete(data._id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 17\n          }, this)\n        }, data._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success mt-3\",\n        onClick: handleCreate,\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 250,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"oO4HJrfb8IOuVqq8oYEEzxAow58=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","selectedFile","setSelectedFile","extractedText","setExtractedText","jsonData","setJsonData","ocrData","setOcrData","imageUrl","setImageUrl","fetchOcrData","handleClear","handleFileChange","e","file","target","files","fileSizeInBytes","size","fileSizeInMB","alert","URL","createObjectURL","handleUpload","formData","FormData","append","post","headers","then","response","data","text","lines","split","parsedData","parseExtractedText","JSON","stringify","serverResponse","console","log","message","catch","error","identification_number","extractValue","name","last_name","date_of_birth","date_of_issue","extractLineAbove","date_of_expiry","extractLineBelow","keyword","i","length","includes","trim","regex","removeWord","line","find","test","value","replace","get","handleCreate","identificationNumber","prompt","lastName","dateOfBirth","dateOfIssue","dateOfExpiry","newOcrData","handleUpdate","id","dataToUpdate","_id","updatedIdentificationNumber","updatedName","updatedLastName","updatedDateOfBirth","updatedDateOfIssue","updatedDateOfExpiry","updatedData","put","handleDelete","confirmDeletion","window","confirm","delete","className","style","backgroundColor","fontFamily","children","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","maxWidth","maxHeight","height","display","alignItems","justifyContent","padding","lineHeight","type","accept","onChange","onClick","map","_c","$RefreshReg$"],"sources":["C:/Users/91635/Desktop/PythonEvn/env/detection/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst App = () => {\n    const [selectedFile, setSelectedFile] = useState(null);\n    const [extractedText, setExtractedText] = useState('');\n    const [jsonData, setJsonData] = useState(null);\n    const [ocrData, setOcrData] = useState([]);\n    const [imageUrl, setImageUrl] = useState(null);\n\n    useEffect(() => {\n        // Fetch OCR data when the component mounts\n        fetchOcrData();\n    }, []);\n\n    const handleClear = () => {\n      setSelectedFile(null);\n      setImageUrl(null);\n      setExtractedText('');\n      setJsonData(null);\n  };\n\n    const handleFileChange = (e) => {\n      const file = e.target.files[0];\n\n      // Check if a file is selected\n      if (file) {\n          // Check the file size (in bytes)\n          const fileSizeInBytes = file.size;\n  \n          // Convert the file size to megabytes\n          const fileSizeInMB = fileSizeInBytes / (1024 * 1024);\n  \n          // Check if the file size exceeds 2MB\n          if (fileSizeInMB > 2) {\n              alert('Please select an image file that is 2MB or smaller.');\n              setSelectedFile(null);\n              setImageUrl(null);\n              return;\n          }\n  \n        setSelectedFile(e.target.files[0]);\n        setImageUrl(URL.createObjectURL(e.target.files[0]));\n      }\n    };\n\n    const handleUpload = () => {\n        if (!selectedFile) return;\n\n        const formData = new FormData();\n        formData.append('image', selectedFile);\n\n        axios.post('http://localhost:5000/upload', formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data',\n            },\n        })\n            .then(response => {\n                setExtractedText(response.data.text);\n                const lines = response.data.text.split('\\n');\n                const parsedData = parseExtractedText(lines);\n                setJsonData(parsedData);\n\n                // Send the JSON data string to the server\n                axios.post('http://localhost:5000/uploadJson', { jsonData: JSON.stringify(parsedData, null, 2) })\n                    .then(serverResponse => {\n                        console.log(serverResponse.data.message);\n\n                        // Fetch updated OCR data after upload\n                        fetchOcrData();\n                    })\n                    .catch(error => console.error(error));\n            })\n            .catch(error => console.error(error));\n    };\n\n    const parseExtractedText = (lines) => {\n        const jsonData = {\n            identification_number: extractValue(lines, /\\b(\\d{1,4}\\s*){5,}\\d{1,4}\\b/),\n            name: extractValue(lines, /Name\\s*([\\s\\n]*[A-Za-z]+\\s[A-Za-z]+)/, 'Name'),\n            last_name: extractValue(lines, /Last [nN]ame\\s*([\\s\\n]*[A-Za-z]+)/, 'Last name'),\n            date_of_birth: extractValue(lines, /\\d{1,2}\\s[A-Za-z]+\\s\\d{4}/, 'Date of Birth'),\n            date_of_issue: extractLineAbove(lines, 'Date of Issue'),\n            date_of_expiry: extractLineAbove(lines, 'Date of Expiry'),\n        };\n        \n        if (!jsonData.last_name) {\n          jsonData.last_name=extractLineAbove(lines, 'Last Name');\n          \n        }\n\n        if (!jsonData.name) {\n          jsonData.name=extractLineBelow(lines, 'Name');\n          console.log('Name field is empty.');\n        }\n\n        if(!jsonData.date_of_birth)\n        {\n          jsonData.date_of_birth=extractLineBelow(lines, 'Date of Birth')\n        }\n        return jsonData;\n    };\n\n    const extractLineAbove = (lines, keyword) => {\n        for (let i = 1; i < lines.length; i++) {\n            if (lines[i].includes(keyword)) {\n                return lines[i - 1].trim(); // Return the line above the \"Date of Issue\"\n            }\n        }\n        return '';\n    };\n\n    const extractLineBelow = (lines, keyword) => {\n      for (let i = 0; i < lines.length - 1; i++) {\n          if (lines[i].includes(keyword)) {\n              return lines[i + 1].trim(); // Return the line below the keyword\n          }\n      }\n      return '';\n  };\n  \n\n    const extractValue = (lines, regex, removeWord) => {\n        const line = lines.find((line) => regex.test(line));\n        if (line) {\n            const value = line.replace(removeWord, '').trim();\n            return value;\n        }\n        return \"\";\n    };\n\n    const fetchOcrData = () => {\n        // Fetch OCR data from the server\n        axios.get('http://localhost:5000/ocrData')\n            .then(response => {\n                setOcrData(response.data);\n            })\n            .catch(error => console.error(error));\n    };\n    const handleCreate = () => {\n      // Prompt the user for OCR data\n      const identificationNumber = prompt('Enter Identification Number:');\n      const name = prompt('Enter Name:');\n      const lastName = prompt('Enter Last Name:');\n      const dateOfBirth = prompt('Enter Date of Birth:');\n      const dateOfIssue = prompt('Enter Date of Issue:');\n      const dateOfExpiry = prompt('Enter Date of Expiry:');\n  \n      // Check if the user clicked Cancel or entered empty values\n      if (\n          identificationNumber === null ||\n          name === null ||\n          lastName === null ||\n          dateOfBirth === null ||\n          dateOfIssue === null ||\n          dateOfExpiry === null\n      ) {\n          // User canceled or entered empty values\n          return;\n      }\n  \n      // Create a new OCR data object\n      const newOcrData = {\n          identification_number: identificationNumber,\n          name: name,\n          last_name: lastName,\n          date_of_birth: dateOfBirth,\n          date_of_issue: dateOfIssue,\n          date_of_expiry: dateOfExpiry,\n      };\n  \n      // Send the new OCR data to the server\n      axios.post('http://localhost:5000/ocrData', newOcrData)\n          .then(response => {\n              console.log(response.data.message);\n              // Fetch updated OCR data after creating a new entry\n              fetchOcrData();\n          })\n          .catch(error => console.error(error));\n  };\n  \n\n    const handleUpdate = (id) => {\n      // Find the OCR data by ID\n      const dataToUpdate = ocrData.find(data => data._id === id);\n  \n      // Prompt the user for updated values\n      const updatedIdentificationNumber = prompt('Enter updated Identification Number:', dataToUpdate.identification_number);\n      const updatedName = prompt('Enter updated Name:', dataToUpdate.name);\n      const updatedLastName = prompt('Enter updated Last Name:', dataToUpdate.last_name);\n      const updatedDateOfBirth = prompt('Enter updated Date of Birth:', dataToUpdate.date_of_birth);\n      const updatedDateOfIssue = prompt('Enter updated Date of Issue:', dataToUpdate.date_of_issue);\n      const updatedDateOfExpiry = prompt('Enter updated Date of Expiry:', dataToUpdate.date_of_expiry);\n  \n      // Check if the user clicked Cancel or entered empty values\n      if (\n          updatedIdentificationNumber === null ||\n          updatedName === null ||\n          updatedLastName === null ||\n          updatedDateOfBirth === null ||\n          updatedDateOfIssue === null ||\n          updatedDateOfExpiry === null\n      ) {\n          // User canceled or entered empty values\n          return;\n      }\n  \n      // Example: Update identification number, name, last name, date of birth, date of issue, date of expiry\n      const updatedData = {\n          ...dataToUpdate,\n          identification_number: updatedIdentificationNumber,\n          name: updatedName,\n          last_name: updatedLastName,\n          date_of_birth: updatedDateOfBirth,\n          date_of_issue: updatedDateOfIssue,\n          date_of_expiry: updatedDateOfExpiry,\n      };\n  \n      // Send the updated data to the server\n      axios.put(`http://localhost:5000/ocrData/${id}`, updatedData)\n          .then(response => {\n              console.log(response.data.message);\n              // Fetch updated OCR data after update\n              fetchOcrData();\n          })\n          .catch(error => console.error(error));\n  };\n  \n  \n\n    const handleDelete = (id) => {\n      // Confirm the deletion with the user\n      const confirmDeletion = window.confirm('Are you sure you want to delete this data?');\n\n      if (confirmDeletion) {\n          // Send a request to delete the data by ID\n          axios.delete(`http://localhost:5000/ocrData/${id}`)\n              .then(response => {\n                  console.log(response.data.message);\n                  // Fetch updated OCR data after deletion\n                  fetchOcrData();\n              })\n              .catch(error => console.error(error));\n      }\n  };\n\n\n  return (\n    <div className=\"container mt-5\" style={{ backgroundColor: '#f8f9fa', fontFamily: 'Lucida Console\", \"Courier New\", monospace' }}>\n        <h1 className=\"mb-4 text-center\" style={{ fontSize: '5rem' }}>Vision API OCR</h1>\n        <div className=\"row\">\n          <div className=\"col-md-6 mb-3 pr-md-4\">\n              <h2>Uploaded Image:</h2>\n              {imageUrl ? (\n                  <img src={imageUrl} alt=\"Uploaded\" style={{ maxWidth: '100%', maxHeight: '400px' }} />\n              ) : (\n                <div className=\"\" style={{  backgroundColor: '#f4f4f4', height: '400px', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n  <span className=\"text-primary\">Select an image to upload</span>\n</div>\n              )}\n          </div>\n          <div className=\"col-md-6 mb-5\">\n          <div style={{ padding: '0px 0px 0px 100px' }}>\n              <h2>JSON Data:</h2>\n              <pre style={{ fontSize: '16px', lineHeight: '2.6' }}>{JSON.stringify(jsonData, null, 2)}</pre>\n          </div>\n          </div>\n          \n    </div>\n\n        <div className=\"mb-3 d-flex\">\n    <input type=\"file\" accept=\"image/*\" onChange={handleFileChange} />\n    <button className=\"btn btn-primary ms-2 flex-shrink-0\" onClick={handleUpload}>Upload and Process</button>\n    <button className=\"btn btn-danger ms-auto\" onClick={handleClear}>Clear</button>\n</div>\n        {/* <div className=\"mb-3\">\n        <button className=\"btn btn-danger\" onClick={handleClear}>Clear</button>\n        </div> */}\n        <div>\n    <h2>History:</h2>\n    <ul className=\"list-group\">\n        {ocrData.map(data => (\n            <li key={data._id} className=\"list-group-item\">\n                <div className=\"d-flex justify-content-between align-items-center\">\n                    <div>\n                        <div><strong>ID:</strong> {data._id}</div>\n                        <div><strong>Identification Number:</strong> {data.identification_number}</div>\n                        <div><strong>Name:</strong> {data.name}</div>\n                        <div><strong>Last Name:</strong> {data.last_name}</div>\n                        <div><strong>Date of Birth:</strong> {data.date_of_birth}</div>\n                        <div><strong>Date of Issue:</strong> {data.date_of_issue}</div>\n                        <div><strong>Date of Expiry:</strong> {data.date_of_expiry}</div>\n                    </div>\n                    <div className=\"d-flex flex-column align-items-end\">\n                        <button className=\"btn btn-warning mb-2\" onClick={() => handleUpdate(data._id)}>Update</button>\n                        <button className=\"btn btn-danger\" onClick={() => handleDelete(data._id)}>Delete</button>\n                    </div>\n                </div>\n            </li>\n        ))}\n    </ul>\n    <button className=\"btn btn-success mt-3\" onClick={handleCreate}>Create</button>\n</div>\n    </div>\n);\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
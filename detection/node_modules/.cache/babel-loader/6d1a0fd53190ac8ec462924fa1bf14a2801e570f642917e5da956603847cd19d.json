{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91635\\\\Desktop\\\\PythonEvn\\\\env\\\\detection\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [extractedText, setExtractedText] = useState('');\n  const [jsonData, setJsonData] = useState({\n    identification_number: '',\n    name: '',\n    last_name: '',\n    date_of_birth: '',\n    date_of_issue: '',\n    date_of_expiry: ''\n  });\n  const handleFileChange = e => {\n    setSelectedFile(e.target.files[0]);\n  };\n  const handleUpload = () => {\n    if (!selectedFile) return;\n    const formData = new FormData();\n    formData.append('image', selectedFile);\n    axios.post('http://localhost:5000/upload', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(response => {\n      setExtractedText(response.data.text);\n      const parsedData = parseExtractedText(response.data.text);\n      setJsonData(parsedData);\n    }).catch(error => console.error(error));\n  };\n  const parseExtractedText = text => {\n    const lines = text.split('\\n');\n    const jsonData = {\n      identification_number: lines[6],\n      name: lines[11] + ' ' + lines[12],\n      last_name: lines[14],\n      date_of_birth: lines[19] + ' ' + lines[20] + ' ' + lines[21],\n      date_of_issue: lines[31] + ' ' + lines[32] + ' ' + lines[33],\n      date_of_expiry: lines[43] + ' ' + lines[44] + ' ' + lines[45]\n    };\n    return jsonData;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Vision API OCR\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload and Process\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Extracted Text:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: extractedText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"JSON Output:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(jsonData, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"V2rFi9hytPb8+oD9KXZvnBFppqw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","selectedFile","setSelectedFile","extractedText","setExtractedText","jsonData","setJsonData","identification_number","name","last_name","date_of_birth","date_of_issue","date_of_expiry","handleFileChange","e","target","files","handleUpload","formData","FormData","append","post","headers","then","response","data","text","parsedData","parseExtractedText","catch","error","console","lines","split","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/91635/Desktop/PythonEvn/env/detection/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst App = () => {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [extractedText, setExtractedText] = useState('');\n  const [jsonData, setJsonData] = useState({\n    identification_number: '',\n    name: '',\n    last_name: '',\n    date_of_birth: '',\n    date_of_issue: '',\n    date_of_expiry: '',\n  });\n\n  const handleFileChange = (e) => {\n    setSelectedFile(e.target.files[0]);\n  };\n\n  const handleUpload = () => {\n    if (!selectedFile) return;\n\n    const formData = new FormData();\n    formData.append('image', selectedFile);\n\n    axios.post('http://localhost:5000/upload', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    })\n      .then(response => {\n        setExtractedText(response.data.text);\n        const parsedData = parseExtractedText(response.data.text);\n        setJsonData(parsedData);\n      })\n      .catch(error => console.error(error));\n  };\n\n  const parseExtractedText = (text) => {\n    const lines = text.split('\\n');\n    const jsonData = {\n      identification_number: lines[6],\n      name: lines[11] + ' ' + lines[12],\n      last_name: lines[14],\n      date_of_birth: lines[19] + ' ' + lines[20] + ' ' + lines[21],\n      date_of_issue: lines[31] + ' ' + lines[32] + ' ' + lines[33],\n      date_of_expiry: lines[43] + ' ' + lines[44] + ' ' + lines[45],\n    };\n\n    return jsonData;\n  };\n\n  return (\n    <div>\n      <h1>Vision API OCR</h1>\n      <input type=\"file\" accept=\"image/*\" onChange={handleFileChange} />\n      <button onClick={handleUpload}>Upload and Process</button>\n      <div>\n        <h2>Extracted Text:</h2>\n        <pre>{extractedText}</pre>\n      </div>\n      <div>\n        <h2>JSON Output:</h2>\n        <pre>{JSON.stringify(jsonData, null, 2)}</pre>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91635\\\\Desktop\\\\PythonEvn\\\\env\\\\detection\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [extractedText, setExtractedText] = useState('');\n  const [jsonData, setJsonData] = useState(null);\n  const handleFileChange = e => {\n    setSelectedFile(e.target.files[0]);\n  };\n  const handleUpload = () => {\n    if (!selectedFile) return;\n    const formData = new FormData();\n    formData.append('image', selectedFile);\n    axios.post('http://localhost:5000/upload', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(response => {\n      setExtractedText(response.data.text);\n      const lines = response.data.text.split('\\n');\n      const parsedData = parseExtractedText(lines);\n      setJsonData(parsedData);\n    }).catch(error => console.error(error));\n  };\n  const parseExtractedText = lines => {\n    const jsonData = {\n      identification_number: extractValue(lines, /\\b(\\d{1,4}\\s*){5,}\\d{1,4}\\b/),\n      name: extractValue(lines, /Name\\s*([\\s\\n]*[A-Za-z]+\\s[A-Za-z]+)/),\n      last_name: extractValue(lines, /Last [nN]ame\\s*([\\s\\n]*[A-Za-z]+)/),\n      date_of_birth: extractValue(lines, /\\d{1,2}\\s[A-Za-z]+\\s\\d{4}/),\n      date_of_issue: extractDate(lines, 'Date of Issue'),\n      date_of_expiry: extractValue(lines, /\\d{1,2}\\s[A-Za-z]+\\s\\d{4}/)\n    };\n    return jsonData;\n  };\n  const extractDate = (lines, keyword) => {\n    let previousLine = '';\n    for (const line of lines) {\n      const value = extractValue([line], new RegExp(`${keyword}\\\\s*([\\\\s\\\\S]+)`));\n      if (value) {\n        return previousLine.trim(); // Return the previous line as the date\n      }\n      previousLine = line;\n    }\n    return '';\n  };\n  const extractValue = (lines, regex) => {\n    const text = lines.join('\\n'); // Combine lines into a single string\n    const match = text.match(regex);\n    return match ? match[1].trim() : \"\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Vision API OCR\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload and Process\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Extracted Text:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: extractedText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"JSON Data:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(jsonData, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"ENTAeh/wH0GnvyqAtA1qKeFCCTo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","selectedFile","setSelectedFile","extractedText","setExtractedText","jsonData","setJsonData","handleFileChange","e","target","files","handleUpload","formData","FormData","append","post","headers","then","response","data","text","lines","split","parsedData","parseExtractedText","catch","error","console","identification_number","extractValue","name","last_name","date_of_birth","date_of_issue","extractDate","date_of_expiry","keyword","previousLine","line","value","RegExp","trim","regex","join","match","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/91635/Desktop/PythonEvn/env/detection/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst App = () => {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [extractedText, setExtractedText] = useState('');\n  const [jsonData, setJsonData] = useState(null);\n\n  const handleFileChange = (e) => {\n    setSelectedFile(e.target.files[0]);\n  };\n\n  const handleUpload = () => {\n    if (!selectedFile) return;\n\n    const formData = new FormData();\n    formData.append('image', selectedFile);\n\n    axios.post('http://localhost:5000/upload', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    })\n      .then(response => {\n        setExtractedText(response.data.text);\n        const lines = response.data.text.split('\\n');\n        const parsedData = parseExtractedText(lines);\n        setJsonData(parsedData);\n      })\n      .catch(error => console.error(error));\n  };\n\n  const parseExtractedText = (lines) => {\n    const jsonData = {\n      identification_number: extractValue(lines, /\\b(\\d{1,4}\\s*){5,}\\d{1,4}\\b/),\n      name: extractValue(lines, /Name\\s*([\\s\\n]*[A-Za-z]+\\s[A-Za-z]+)/),\n      last_name: extractValue(lines, /Last [nN]ame\\s*([\\s\\n]*[A-Za-z]+)/),\n      date_of_birth: extractValue(lines, /\\d{1,2}\\s[A-Za-z]+\\s\\d{4}/),\n      date_of_issue: extractDate(lines, 'Date of Issue'),\n      date_of_expiry: extractValue(lines, /\\d{1,2}\\s[A-Za-z]+\\s\\d{4}/),\n    };\n\n    return jsonData;\n  };\n\n  const extractDate = (lines, keyword) => {\n    let previousLine = '';\n    for (const line of lines) {\n      const value = extractValue([line], new RegExp(`${keyword}\\\\s*([\\\\s\\\\S]+)`));\n      if (value) {\n        return previousLine.trim(); // Return the previous line as the date\n      }\n      previousLine = line;\n    }\n    return '';\n  };\n  \n  const extractValue = (lines, regex) => {\n    const text = lines.join('\\n'); // Combine lines into a single string\n    const match = text.match(regex);\n    return match ? match[1].trim() : \"\";\n  };\n  \n\n  return (\n    <div>\n      <h1>Vision API OCR</h1>\n      <input type=\"file\" accept=\"image/*\" onChange={handleFileChange} />\n      <button onClick={handleUpload}>Upload and Process</button>\n      <div>\n        <h2>Extracted Text:</h2>\n        <pre>{extractedText}</pre>\n        <h2>JSON Data:</h2>\n        <pre>{JSON.stringify(jsonData, null, 2)}</pre>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
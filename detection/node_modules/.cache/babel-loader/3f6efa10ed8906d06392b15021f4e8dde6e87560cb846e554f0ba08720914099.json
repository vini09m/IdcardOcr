{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import'bootstrap/dist/css/bootstrap.min.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[selectedFile,setSelectedFile]=useState(null);const[extractedText,setExtractedText]=useState('');const[jsonData,setJsonData]=useState(null);const[ocrData,setOcrData]=useState([]);const[imageUrl,setImageUrl]=useState(null);useEffect(()=>{// Fetch OCR data when the component mounts\nfetchOcrData();},[]);const handleClear=()=>{setSelectedFile(null);setImageUrl(null);//setExtractedText('');\nsetJsonData(null);// Reset the value of the file input to clear the selected file\nconst fileInput=document.querySelector('input[type=\"file\"]');if(fileInput){fileInput.value=null;}};const handleFileChange=e=>{const file=e.target.files[0];// Check if a file is selected\nif(file){// Check the file size (in bytes)\nconst fileSizeInBytes=file.size;// Convert the file size to megabytes\nconst fileSizeInMB=fileSizeInBytes/(1024*1024);// Check if the file size exceeds 2MB\nif(fileSizeInMB>2){alert('Please select an image file that is 2MB or smaller.');console.log(\"failed\");setSelectedFile(null);setImageUrl(null);const fileInput=document.querySelector('input[type=\"file\"]');if(fileInput){fileInput.value=null;}return;}else{setSelectedFile(e.target.files[0]);setImageUrl(URL.createObjectURL(e.target.files[0]));}}};const handleUpload=()=>{if(!selectedFile){alert('Please select an image file.');return;}const formData=new FormData();formData.append('image',selectedFile);axios.post('http://localhost:5000/upload',formData,{headers:{'Content-Type':'multipart/form-data'}}).then(response=>{setExtractedText(response.data.text);const lines=response.data.text.split('\\n');const parsedData=parseExtractedText(lines);// Check if the identification number already exists in ocrData\nconst identificationNumberExists=ocrData.some(data=>data.identification_number===parsedData.identification_number);if(identificationNumberExists){alert('Identification number already exists. Please choose a different ID Card.');return;}setJsonData(parsedData);// Send the JSON data string to the server\naxios.post('http://localhost:5000/uploadJson',{jsonData:JSON.stringify(parsedData,null,2)}).then(serverResponse=>{console.log(serverResponse.data.message);// Fetch updated OCR data after upload\nfetchOcrData();}).catch(error=>console.error(error));}).catch(error=>console.error(error));};const parseExtractedText=lines=>{const jsonData={identification_number:extractValue(lines,/\\b(\\d{1,4}\\s*){5,}\\d{1,4}\\b/),name:extractValue(lines,/Name\\s*([\\s\\n]*[A-Za-z]+\\s[A-Za-z]+)/,'Name'),last_name:extractValue(lines,/Last [nN]ame\\s*([\\s\\n]*[A-Za-z]+)/,'Last name'),date_of_birth:extractValue(lines,/\\d{1,2}\\s[A-Za-z]+\\s\\d{4}/,'Date of Birth'),date_of_issue:extractLineAbove(lines,'Date of Issue'),date_of_expiry:extractLineAbove(lines,'Date of Expiry')};if(!jsonData.last_name){jsonData.last_name=extractLineAbove(lines,'Last Name');}if(!jsonData.name){jsonData.name=extractLineBelow(lines,'Name');console.log('Name field is empty.');}if(!jsonData.date_of_birth){jsonData.date_of_birth=extractLineBelow(lines,'Date of Birth');}return jsonData;};const extractLineAbove=(lines,keyword)=>{for(let i=1;i<lines.length;i++){if(lines[i].includes(keyword)){return lines[i-1].trim();// Return the line above the \"Date of Issue\"\n}}return'';};const extractLineBelow=(lines,keyword)=>{for(let i=0;i<lines.length-1;i++){if(lines[i].includes(keyword)){return lines[i+1].trim();// Return the line below the keyword\n}}return'';};const extractValue=(lines,regex,removeWord)=>{const line=lines.find(line=>regex.test(line));if(line){const value=line.replace(removeWord,'').trim();return value;}return\"\";};const fetchOcrData=()=>{// Fetch OCR data from the server\naxios.get('http://localhost:5000/ocrData').then(response=>{setOcrData(response.data);}).catch(error=>console.error(error));};const handleCreate=()=>{// Prompt the user for OCR data\nconst identificationNumber=prompt('Enter Identification Number:');const name=prompt('Enter Name:');const lastName=prompt('Enter Last Name:');const dateOfBirth=prompt('Enter Date of Birth:');const dateOfIssue=prompt('Enter Date of Issue:');const dateOfExpiry=prompt('Enter Date of Expiry:');// Check if the user clicked Cancel or entered empty values\nif(identificationNumber===null||name===null||lastName===null||dateOfBirth===null||dateOfIssue===null||dateOfExpiry===null){// User canceled or entered empty values\nreturn;}// Check if the identification number already exists in ocrData\nconst identificationNumberExists=ocrData.some(data=>data.identification_number===identificationNumber);if(identificationNumberExists){alert('Identification number already exists. Please enter a different identification number.');return;}// Create a new OCR data object\nconst newOcrData={identification_number:identificationNumber,name:name,last_name:lastName,date_of_birth:dateOfBirth,date_of_issue:dateOfIssue,date_of_expiry:dateOfExpiry};// Send the new OCR data to the server\naxios.post('http://localhost:5000/ocrData',newOcrData).then(response=>{console.log(response.data.message);// Fetch updated OCR data after creating a new entry\nfetchOcrData();}).catch(error=>console.error(error));};const handleUpdate=id=>{// Find the OCR data by ID\nconst dataToUpdate=ocrData.find(data=>data._id===id);// Prompt the user for updated values\nconst updatedIdentificationNumber=prompt('Enter updated Identification Number:',dataToUpdate.identification_number);const updatedName=prompt('Enter updated Name:',dataToUpdate.name);const updatedLastName=prompt('Enter updated Last Name:',dataToUpdate.last_name);const updatedDateOfBirth=prompt('Enter updated Date of Birth:',dataToUpdate.date_of_birth);const updatedDateOfIssue=prompt('Enter updated Date of Issue:',dataToUpdate.date_of_issue);const updatedDateOfExpiry=prompt('Enter updated Date of Expiry:',dataToUpdate.date_of_expiry);// Check if the user clicked Cancel or entered empty values\nif(updatedIdentificationNumber===null||updatedName===null||updatedLastName===null||updatedDateOfBirth===null||updatedDateOfIssue===null||updatedDateOfExpiry===null){// User canceled or entered empty values\nreturn;}// Example: Update identification number, name, last name, date of birth, date of issue, date of expiry\nconst updatedData={...dataToUpdate,identification_number:updatedIdentificationNumber,name:updatedName,last_name:updatedLastName,date_of_birth:updatedDateOfBirth,date_of_issue:updatedDateOfIssue,date_of_expiry:updatedDateOfExpiry};// Send the updated data to the server\naxios.put(\"http://localhost:5000/ocrData/\".concat(id),updatedData).then(response=>{console.log(response.data.message);// Fetch updated OCR data after update\nfetchOcrData();}).catch(error=>console.error(error));};console.log(extractedText);const handleDelete=id=>{// Confirm the deletion with the user\nconst confirmDeletion=window.confirm('Are you sure you want to delete this data?');if(confirmDeletion){// Send a request to delete the data by ID\naxios.delete(\"http://localhost:5000/ocrData/\".concat(id)).then(response=>{console.log(response.data.message);// Fetch updated OCR data after deletion\nfetchOcrData();}).catch(error=>console.error(error));}};return/*#__PURE__*/_jsxs(\"div\",{className:\"container mt-5\",style:{backgroundColor:'#f8f9fa',fontFamily:'Lucida Console\", \"Courier New\", monospace'},children:[/*#__PURE__*/_jsx(\"h1\",{className:\"mb-4 text-center\",style:{fontSize:'5rem'},children:\"ID Card OCR\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-6 mb-3 pr-md-4\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Uploaded Image:\"}),imageUrl?/*#__PURE__*/_jsx(\"img\",{src:imageUrl,alt:\"Uploaded\",style:{maxWidth:'100%',maxHeight:'400px'}}):/*#__PURE__*/_jsx(\"div\",{className:\"\",style:{backgroundColor:'#f4f4f4',height:'400px',display:'flex',alignItems:'center',justifyContent:'center'},children:/*#__PURE__*/_jsx(\"span\",{className:\"text-primary\",children:\"Select an image to upload\"})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-6 mb-5\",children:/*#__PURE__*/_jsxs(\"div\",{style:{padding:'0px 0px 0px 100px'},children:[/*#__PURE__*/_jsx(\"h2\",{children:\"JSON Data:\"}),/*#__PURE__*/_jsx(\"pre\",{style:{fontSize:'16px',lineHeight:'2.6'},children:JSON.stringify(jsonData,null,2)})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3 d-flex\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"btn btn-success\",htmlFor:\"fileInput\",style:{padding:'10px',cursor:'pointer',marginRight:'30px'},children:\"Choose File\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",accept:\"image/*\",id:\"fileInput\",onChange:handleFileChange,style:{display:'none'}}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary ms-2 flex-shrink-0\",style:{marginRight:'36px'},onClick:handleUpload,children:\"Upload and Process\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-danger\",onClick:handleClear,children:\"Clear\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"History:\"}),/*#__PURE__*/_jsx(\"ul\",{className:\"list-group\",children:ocrData.map(data=>/*#__PURE__*/_jsx(\"li\",{className:\"list-group-item\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-between align-items-center\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"ID:\"}),\" \",data._id]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Identification Number:\"}),\" \",data.identification_number]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Name:\"}),\" \",data.name]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Last Name:\"}),\" \",data.last_name]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Date of Birth:\"}),\" \",data.date_of_birth]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Date of Issue:\"}),\" \",data.date_of_issue]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Date of Expiry:\"}),\" \",data.date_of_expiry]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex flex-column align-items-end\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-warning mb-2\",onClick:()=>handleUpdate(data._id),children:\"Update\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-danger\",onClick:()=>handleDelete(data._id),children:\"Delete\"})]})]})},data._id))}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-success mt-3\",onClick:handleCreate,children:\"Create\"})]})]});};export default App;","map":{"version":3,"names":["React","useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","App","selectedFile","setSelectedFile","extractedText","setExtractedText","jsonData","setJsonData","ocrData","setOcrData","imageUrl","setImageUrl","fetchOcrData","handleClear","fileInput","document","querySelector","value","handleFileChange","e","file","target","files","fileSizeInBytes","size","fileSizeInMB","alert","console","log","URL","createObjectURL","handleUpload","formData","FormData","append","post","headers","then","response","data","text","lines","split","parsedData","parseExtractedText","identificationNumberExists","some","identification_number","JSON","stringify","serverResponse","message","catch","error","extractValue","name","last_name","date_of_birth","date_of_issue","extractLineAbove","date_of_expiry","extractLineBelow","keyword","i","length","includes","trim","regex","removeWord","line","find","test","replace","get","handleCreate","identificationNumber","prompt","lastName","dateOfBirth","dateOfIssue","dateOfExpiry","newOcrData","handleUpdate","id","dataToUpdate","_id","updatedIdentificationNumber","updatedName","updatedLastName","updatedDateOfBirth","updatedDateOfIssue","updatedDateOfExpiry","updatedData","put","concat","handleDelete","confirmDeletion","window","confirm","delete","className","style","backgroundColor","fontFamily","children","fontSize","src","alt","maxWidth","maxHeight","height","display","alignItems","justifyContent","padding","lineHeight","htmlFor","cursor","marginRight","type","accept","onChange","onClick","map"],"sources":["C:/Users/91635/Desktop/PythonEvn/env/detection/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst App = () => {\n    const [selectedFile, setSelectedFile] = useState(null);\n    const [extractedText, setExtractedText] = useState('');\n    const [jsonData, setJsonData] = useState(null);\n    const [ocrData, setOcrData] = useState([]);\n    const [imageUrl, setImageUrl] = useState(null);\n\n    useEffect(() => {\n        // Fetch OCR data when the component mounts\n        fetchOcrData();\n    }, []);\n\n    const handleClear = () => {\n      setSelectedFile(null);\n      setImageUrl(null);\n      //setExtractedText('');\n      setJsonData(null);\n          // Reset the value of the file input to clear the selected file\n    const fileInput = document.querySelector('input[type=\"file\"]');\n    if (fileInput) {\n        fileInput.value = null;\n    }\n\n  };\n\n    const handleFileChange = (e) => {\n      const file = e.target.files[0];\n\n      // Check if a file is selected\n      if (file) {\n          // Check the file size (in bytes)\n          const fileSizeInBytes = file.size;\n  \n          // Convert the file size to megabytes\n          const fileSizeInMB = fileSizeInBytes / (1024 * 1024);\n  \n          // Check if the file size exceeds 2MB\n          if (fileSizeInMB > 2) {\n              alert('Please select an image file that is 2MB or smaller.');\n              console.log(\"failed\")\n              setSelectedFile(null);\n              setImageUrl(null);\n              const fileInput = document.querySelector('input[type=\"file\"]');\n    if (fileInput) {\n        fileInput.value = null;\n    }\n              return;\n          }\n          else{\n            setSelectedFile(e.target.files[0]);\n            setImageUrl(URL.createObjectURL(e.target.files[0]));\n          }\n        \n      }\n    };\n\n    const handleUpload = () => {\n      if (!selectedFile) {\n          alert('Please select an image file.');\n          return;\n      }\n  \n      const formData = new FormData();\n      formData.append('image', selectedFile);\n  \n      axios.post('http://localhost:5000/upload', formData, {\n          headers: {\n              'Content-Type': 'multipart/form-data',\n          },\n      })\n      .then(response => {\n          setExtractedText(response.data.text);\n          const lines = response.data.text.split('\\n');\n          const parsedData = parseExtractedText(lines);\n  \n          // Check if the identification number already exists in ocrData\n          const identificationNumberExists = ocrData.some(data => data.identification_number === parsedData.identification_number);\n  \n          if (identificationNumberExists) {\n              alert('Identification number already exists. Please choose a different ID Card.');\n              return;\n          }\n  \n          setJsonData(parsedData);\n  \n          // Send the JSON data string to the server\n          axios.post('http://localhost:5000/uploadJson', { jsonData: JSON.stringify(parsedData, null, 2) })\n              .then(serverResponse => {\n                  console.log(serverResponse.data.message);\n  \n                  // Fetch updated OCR data after upload\n                  fetchOcrData();\n              })\n              .catch(error => console.error(error));\n      })\n      .catch(error => console.error(error));\n  };\n  \n\n    const parseExtractedText = (lines) => {\n        const jsonData = {\n            identification_number: extractValue(lines, /\\b(\\d{1,4}\\s*){5,}\\d{1,4}\\b/),\n            name: extractValue(lines, /Name\\s*([\\s\\n]*[A-Za-z]+\\s[A-Za-z]+)/, 'Name'),\n            last_name: extractValue(lines, /Last [nN]ame\\s*([\\s\\n]*[A-Za-z]+)/, 'Last name'),\n            date_of_birth: extractValue(lines, /\\d{1,2}\\s[A-Za-z]+\\s\\d{4}/, 'Date of Birth'),\n            date_of_issue: extractLineAbove(lines, 'Date of Issue'),\n            date_of_expiry: extractLineAbove(lines, 'Date of Expiry'),\n        };\n        \n        if (!jsonData.last_name) {\n          jsonData.last_name=extractLineAbove(lines, 'Last Name');\n          \n        }\n\n        if (!jsonData.name) {\n          jsonData.name=extractLineBelow(lines, 'Name');\n          console.log('Name field is empty.');\n        }\n\n        if(!jsonData.date_of_birth)\n        {\n          jsonData.date_of_birth=extractLineBelow(lines, 'Date of Birth')\n        }\n        return jsonData;\n    };\n\n    const extractLineAbove = (lines, keyword) => {\n        for (let i = 1; i < lines.length; i++) {\n            if (lines[i].includes(keyword)) {\n                return lines[i - 1].trim(); // Return the line above the \"Date of Issue\"\n            }\n        }\n        return '';\n    };\n\n    const extractLineBelow = (lines, keyword) => {\n      for (let i = 0; i < lines.length - 1; i++) {\n          if (lines[i].includes(keyword)) {\n              return lines[i + 1].trim(); // Return the line below the keyword\n          }\n      }\n      return '';\n  };\n  \n\n    const extractValue = (lines, regex, removeWord) => {\n        const line = lines.find((line) => regex.test(line));\n        if (line) {\n            const value = line.replace(removeWord, '').trim();\n            return value;\n        }\n        return \"\";\n    };\n\n    const fetchOcrData = () => {\n        // Fetch OCR data from the server\n        axios.get('http://localhost:5000/ocrData')\n            .then(response => {\n                setOcrData(response.data);\n            })\n            .catch(error => console.error(error));\n    };\n    const handleCreate = () => {\n      // Prompt the user for OCR data\n      const identificationNumber = prompt('Enter Identification Number:');\n      const name = prompt('Enter Name:');\n      const lastName = prompt('Enter Last Name:');\n      const dateOfBirth = prompt('Enter Date of Birth:');\n      const dateOfIssue = prompt('Enter Date of Issue:');\n      const dateOfExpiry = prompt('Enter Date of Expiry:');\n  \n      \n      // Check if the user clicked Cancel or entered empty values\n      if (\n          identificationNumber === null ||\n          name === null ||\n          lastName === null ||\n          dateOfBirth === null ||\n          dateOfIssue === null ||\n          dateOfExpiry === null\n      ) {\n          // User canceled or entered empty values\n          return;\n      }\n  \n      // Check if the identification number already exists in ocrData\n    const identificationNumberExists = ocrData.some(data => data.identification_number === identificationNumber);\n\n    if (identificationNumberExists) {\n        alert('Identification number already exists. Please enter a different identification number.');\n        return;\n    }\n\n      // Create a new OCR data object\n      const newOcrData = {\n          identification_number: identificationNumber,\n          name: name,\n          last_name: lastName,\n          date_of_birth: dateOfBirth,\n          date_of_issue: dateOfIssue,\n          date_of_expiry: dateOfExpiry,\n      };\n  \n      // Send the new OCR data to the server\n      axios.post('http://localhost:5000/ocrData', newOcrData)\n          .then(response => {\n              console.log(response.data.message);\n              // Fetch updated OCR data after creating a new entry\n              fetchOcrData();\n          })\n          .catch(error => console.error(error));\n  };\n  \n\n    const handleUpdate = (id) => {\n      // Find the OCR data by ID\n      const dataToUpdate = ocrData.find(data => data._id === id);\n  \n      // Prompt the user for updated values\n      const updatedIdentificationNumber = prompt('Enter updated Identification Number:', dataToUpdate.identification_number);\n      const updatedName = prompt('Enter updated Name:', dataToUpdate.name);\n      const updatedLastName = prompt('Enter updated Last Name:', dataToUpdate.last_name);\n      const updatedDateOfBirth = prompt('Enter updated Date of Birth:', dataToUpdate.date_of_birth);\n      const updatedDateOfIssue = prompt('Enter updated Date of Issue:', dataToUpdate.date_of_issue);\n      const updatedDateOfExpiry = prompt('Enter updated Date of Expiry:', dataToUpdate.date_of_expiry);\n  \n      // Check if the user clicked Cancel or entered empty values\n      if (\n          updatedIdentificationNumber === null ||\n          updatedName === null ||\n          updatedLastName === null ||\n          updatedDateOfBirth === null ||\n          updatedDateOfIssue === null ||\n          updatedDateOfExpiry === null\n      ) {\n          // User canceled or entered empty values\n          return;\n      }\n  \n      // Example: Update identification number, name, last name, date of birth, date of issue, date of expiry\n      const updatedData = {\n          ...dataToUpdate,\n          identification_number: updatedIdentificationNumber,\n          name: updatedName,\n          last_name: updatedLastName,\n          date_of_birth: updatedDateOfBirth,\n          date_of_issue: updatedDateOfIssue,\n          date_of_expiry: updatedDateOfExpiry,\n      };\n  \n      // Send the updated data to the server\n      axios.put(`http://localhost:5000/ocrData/${id}`, updatedData)\n          .then(response => {\n              console.log(response.data.message);\n              // Fetch updated OCR data after update\n              fetchOcrData();\n          })\n          .catch(error => console.error(error));\n  };\n  \n  console.log(extractedText);\n\n    const handleDelete = (id) => {\n      // Confirm the deletion with the user\n      const confirmDeletion = window.confirm('Are you sure you want to delete this data?');\n\n      if (confirmDeletion) {\n          // Send a request to delete the data by ID\n          axios.delete(`http://localhost:5000/ocrData/${id}`)\n              .then(response => {\n                  console.log(response.data.message);\n                  // Fetch updated OCR data after deletion\n                  fetchOcrData();\n              })\n              .catch(error => console.error(error));\n      }\n  };\n\n\n  return (\n    <div className=\"container mt-5\" style={{ backgroundColor: '#f8f9fa', fontFamily: 'Lucida Console\", \"Courier New\", monospace' }}>\n        <h1 className=\"mb-4 text-center\" style={{ fontSize: '5rem' }}>ID Card OCR</h1>\n        <div className=\"row\">\n          <div className=\"col-md-6 mb-3 pr-md-4\">\n              <h2>Uploaded Image:</h2>\n              {imageUrl ? (\n                  <img src={imageUrl} alt=\"Uploaded\" style={{ maxWidth: '100%', maxHeight: '400px' }} />\n              ) : (\n                <div className=\"\" style={{  backgroundColor: '#f4f4f4', height: '400px', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n  <span className=\"text-primary\">Select an image to upload</span>\n</div>\n              )}\n          </div>\n          <div className=\"col-md-6 mb-5\">\n          <div style={{ padding: '0px 0px 0px 100px' }}>\n              <h2>JSON Data:</h2>\n              <pre style={{ fontSize: '16px', lineHeight: '2.6' }}>{JSON.stringify(jsonData, null, 2)}</pre>\n          </div>\n          </div>\n          \n    </div>\n\n        <div className=\"mb-3 d-flex\">\n        {/* Use a label to create a custom-styled button */}\n<label className='btn btn-success' htmlFor=\"fileInput\" style={{ padding: '10px', cursor: 'pointer',marginRight: '30px' }}>\n  Choose File\n</label>\n{/* Hide the default file input */}\n<input\n  type=\"file\"\n  accept=\"image/*\"\n  id=\"fileInput\"\n  onChange={handleFileChange}\n  style={{ display: 'none' }}\n/>\n    <button className=\"btn btn-primary ms-2 flex-shrink-0\"  style={{ marginRight: '36px' }} onClick={handleUpload}>Upload and Process</button>\n    <button className=\"btn btn-danger\" onClick={handleClear}>Clear</button>\n</div>\n        {/* <div className=\"mb-3\">\n        <button className=\"btn btn-danger\" onClick={handleClear}>Clear</button>\n        </div> */}\n        <div>\n    <h2>History:</h2>\n    <ul className=\"list-group\">\n        {ocrData.map(data => (\n            <li key={data._id} className=\"list-group-item\">\n                <div className=\"d-flex justify-content-between align-items-center\">\n                    <div>\n                        <div><strong>ID:</strong> {data._id}</div>\n                        <div><strong>Identification Number:</strong> {data.identification_number}</div>\n                        <div><strong>Name:</strong> {data.name}</div>\n                        <div><strong>Last Name:</strong> {data.last_name}</div>\n                        <div><strong>Date of Birth:</strong> {data.date_of_birth}</div>\n                        <div><strong>Date of Issue:</strong> {data.date_of_issue}</div>\n                        <div><strong>Date of Expiry:</strong> {data.date_of_expiry}</div>\n                    </div>\n                    <div className=\"d-flex flex-column align-items-end\">\n                        <button className=\"btn btn-warning mb-2\" onClick={() => handleUpdate(data._id)}>Update</button>\n                        <button className=\"btn btn-danger\" onClick={() => handleDelete(data._id)}>Delete</button>\n                    </div>\n                </div>\n            </li>\n        ))}\n    </ul>\n    <button className=\"btn btn-success mt-3\" onClick={handleCreate}>Create</button>\n</div>\n    </div>\n);\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
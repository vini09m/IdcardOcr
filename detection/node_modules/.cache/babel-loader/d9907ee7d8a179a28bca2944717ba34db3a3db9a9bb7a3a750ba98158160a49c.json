{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91635\\\\Desktop\\\\PythonEvn\\\\env\\\\detection\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [extractedText, setExtractedText] = useState('');\n  const [jsonData, setJsonData] = useState(null);\n  const handleFileChange = e => {\n    setSelectedFile(e.target.files[0]);\n  };\n  const handleUpload = () => {\n    if (!selectedFile) return;\n    const formData = new FormData();\n    formData.append('image', selectedFile);\n    axios.post('http://localhost:5000/upload', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(response => {\n      setExtractedText(response.data.text);\n      const lines = response.data.text.split('\\n');\n      const parsedData = parseExtractedText(lines);\n      setJsonData(parsedData);\n\n      // Send the final JSON data to the server\n      axios.post('http://localhost:5000/uploadJson', parsedData).then(serverResponse => {\n        console.log(serverResponse.data.message);\n      }).catch(error => console.error(error));\n    }).catch(error => console.error(error));\n  };\n  const parseExtractedText = lines => {\n    const jsonData = {\n      identification_number: extractValue(lines, /\\b(\\d{1,4}\\s*){5,}\\d{1,4}\\b/),\n      name: extractValue(lines, /Name\\s*([\\s\\n]*[A-Za-z]+\\s[A-Za-z]+)/, 'Name'),\n      last_name: extractValue(lines, /Last [nN]ame\\s*([\\s\\n]*[A-Za-z]+)/, 'Last name'),\n      date_of_birth: extractValue(lines, /\\d{1,2}\\s[A-Za-z]+\\s\\d{4}/, 'Date of Birth'),\n      date_of_issue: extractDate(lines, 'Date of Issue'),\n      date_of_expiry: extractDate(lines, 'Date of Expiry')\n    };\n    return jsonData;\n  };\n  const extractDate = (lines, keyword) => {\n    for (let i = 1; i < lines.length; i++) {\n      if (lines[i].includes(keyword)) {\n        return lines[i - 1].trim(); // Return the line above the \"Date of Issue\"\n      }\n    }\n    return '';\n  };\n  const extractValue = (lines, regex, removeWord) => {\n    const line = lines.find(line => regex.test(line));\n    if (line) {\n      const value = line.replace(removeWord, '').trim();\n      return value;\n    }\n    return \"\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Vision API OCR\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload and Process\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Extracted Text:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: extractedText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"JSON Data:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(jsonData, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"ENTAeh/wH0GnvyqAtA1qKeFCCTo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","selectedFile","setSelectedFile","extractedText","setExtractedText","jsonData","setJsonData","handleFileChange","e","target","files","handleUpload","formData","FormData","append","post","headers","then","response","data","text","lines","split","parsedData","parseExtractedText","serverResponse","console","log","message","catch","error","identification_number","extractValue","name","last_name","date_of_birth","date_of_issue","extractDate","date_of_expiry","keyword","i","length","includes","trim","regex","removeWord","line","find","test","value","replace","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/91635/Desktop/PythonEvn/env/detection/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst App = () => {\n    const [selectedFile, setSelectedFile] = useState(null);\n    const [extractedText, setExtractedText] = useState('');\n    const [jsonData, setJsonData] = useState(null);\n\n    const handleFileChange = (e) => {\n        setSelectedFile(e.target.files[0]);\n    };\n\n    const handleUpload = () => {\n        if (!selectedFile) return;\n\n        const formData = new FormData();\n        formData.append('image', selectedFile);\n\n        axios.post('http://localhost:5000/upload', formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data',\n            },\n        })\n            .then(response => {\n                setExtractedText(response.data.text);\n                const lines = response.data.text.split('\\n');\n                const parsedData = parseExtractedText(lines);\n                setJsonData(parsedData);\n\n// Send the final JSON data to the server\naxios.post('http://localhost:5000/uploadJson', parsedData)\n.then(serverResponse => {\n    console.log(serverResponse.data.message);\n})\n.catch(error => console.error(error));\n})\n.catch(error => console.error(error));\n\n    };\n\n    const parseExtractedText = (lines) => {\n        const jsonData = {\n            identification_number: extractValue(lines, /\\b(\\d{1,4}\\s*){5,}\\d{1,4}\\b/),\n            name: extractValue(lines, /Name\\s*([\\s\\n]*[A-Za-z]+\\s[A-Za-z]+)/, 'Name'),\n            last_name: extractValue(lines, /Last [nN]ame\\s*([\\s\\n]*[A-Za-z]+)/, 'Last name'),\n            date_of_birth: extractValue(lines, /\\d{1,2}\\s[A-Za-z]+\\s\\d{4}/, 'Date of Birth'),\n            date_of_issue: extractDate(lines, 'Date of Issue'),\n            date_of_expiry: extractDate(lines, 'Date of Expiry'),\n        };\n\n        return jsonData;\n    };\n\n    const extractDate = (lines, keyword) => {\n        for (let i = 1; i < lines.length; i++) {\n            if (lines[i].includes(keyword)) {\n                return lines[i - 1].trim(); // Return the line above the \"Date of Issue\"\n            }\n        }\n        return '';\n    };\n\n    const extractValue = (lines, regex, removeWord) => {\n        const line = lines.find((line) => regex.test(line));\n        if (line) {\n            const value = line.replace(removeWord, '').trim();\n            return value;\n        }\n        return \"\";\n    };\n\n    return (\n        <div>\n            <h1>Vision API OCR</h1>\n            <input type=\"file\" accept=\"image/*\" onChange={handleFileChange} />\n            <button onClick={handleUpload}>Upload and Process</button>\n            <div>\n                <h2>Extracted Text:</h2>\n                <pre>{extractedText}</pre>\n                <h2>JSON Data:</h2>\n                <pre>{JSON.stringify(jsonData, null, 2)}</pre>\n            </div>\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
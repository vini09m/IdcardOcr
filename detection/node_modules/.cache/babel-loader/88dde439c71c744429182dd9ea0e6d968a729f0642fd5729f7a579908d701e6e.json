{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91635\\\\Desktop\\\\PythonEvn\\\\env\\\\detection\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [extractedText, setExtractedText] = useState('');\n  const [jsonData, setJsonData] = useState(null);\n  const handleFileChange = e => {\n    setSelectedFile(e.target.files[0]);\n  };\n  const handleUpload = () => {\n    if (!selectedFile) return;\n    const formData = new FormData();\n    formData.append('image', selectedFile);\n    axios.post('http://localhost:5000/upload', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(response => {\n      setExtractedText(response.data.text);\n      const lines = response.data.text.split('\\n');\n      const parsedData = parseExtractedText(lines);\n      setJsonData(parsedData);\n    }).catch(error => console.error(error));\n  };\n  const extractMultiLineValue = (text, startKeyword, endKeyword) => {\n    const startRegex = new RegExp(`${startKeyword}\\\\s*([A-Za-z]+(?:\\\\s+[A-Za-z]+)*)`);\n    const endRegex = new RegExp(`${endKeyword}\\\\s*([A-Za-z]+(?:\\\\s+[A-Za-z]+)*)`);\n    const startIndex = text.search(startRegex);\n    const endIndex = text.search(endRegex);\n    const extractedText = text.slice(startIndex, endIndex);\n    return extractValue(extractedText, /[A-Za-z]+(?:\\s+[A-Za-z]+)*/);\n  };\n  const parseExtractedText = text => {\n    const jsonData = {\n      identification_number: extractValue(text, /\\b(\\d{1,4}\\s*){5,}\\d{1,4}\\b/),\n      name: extractMultiLineValue(text, 'Name', 'Last Name'),\n      last_name: extractValue(text, 'Last Name', 'Date of Birth'),\n      date_of_birth: extractValue(text, 'Date of Birth', 'Date of Issue'),\n      date_of_issue: extractValue(text, 'Date of Issue', 'Date of Expiry'),\n      date_of_expiry: extractValue(text, 'Date of Expiry', 'Date of Issue')\n    };\n    return jsonData;\n  };\n  const extractValue = (lines, regex) => {\n    const line = lines.find(line => regex.test(line));\n    return line ? line.trim() : \"\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Vision API OCR\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload and Process\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Extracted Text:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: extractedText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"JSON Data:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(jsonData, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"ENTAeh/wH0GnvyqAtA1qKeFCCTo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","selectedFile","setSelectedFile","extractedText","setExtractedText","jsonData","setJsonData","handleFileChange","e","target","files","handleUpload","formData","FormData","append","post","headers","then","response","data","text","lines","split","parsedData","parseExtractedText","catch","error","console","extractMultiLineValue","startKeyword","endKeyword","startRegex","RegExp","endRegex","startIndex","search","endIndex","slice","extractValue","identification_number","name","last_name","date_of_birth","date_of_issue","date_of_expiry","regex","line","find","test","trim","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/91635/Desktop/PythonEvn/env/detection/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst App = () => {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [extractedText, setExtractedText] = useState('');\n  const [jsonData, setJsonData] = useState(null);\n\n  const handleFileChange = (e) => {\n    setSelectedFile(e.target.files[0]);\n  };\n\n  const handleUpload = () => {\n    if (!selectedFile) return;\n\n    const formData = new FormData();\n    formData.append('image', selectedFile);\n\n    axios.post('http://localhost:5000/upload', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    })\n      .then(response => {\n        setExtractedText(response.data.text);\n        const lines = response.data.text.split('\\n');\n        const parsedData = parseExtractedText(lines);\n        setJsonData(parsedData);\n      })\n      .catch(error => console.error(error));\n  };\n\n  const extractMultiLineValue = (text, startKeyword, endKeyword) => {\n    const startRegex = new RegExp(`${startKeyword}\\\\s*([A-Za-z]+(?:\\\\s+[A-Za-z]+)*)`);\n    const endRegex = new RegExp(`${endKeyword}\\\\s*([A-Za-z]+(?:\\\\s+[A-Za-z]+)*)`);\n    const startIndex = text.search(startRegex);\n    const endIndex = text.search(endRegex);\n    const extractedText = text.slice(startIndex, endIndex);\n    return extractValue(extractedText, /[A-Za-z]+(?:\\s+[A-Za-z]+)*/);\n  };\n  \n  const parseExtractedText = (text) => {\n    const jsonData = {\n      identification_number: extractValue(text, /\\b(\\d{1,4}\\s*){5,}\\d{1,4}\\b/),\n      name: extractMultiLineValue(text, 'Name', 'Last Name'),\n      last_name: extractValue(text, 'Last Name', 'Date of Birth'),\n      date_of_birth: extractValue(text, 'Date of Birth', 'Date of Issue'),\n      date_of_issue: extractValue(text, 'Date of Issue', 'Date of Expiry'),\n      date_of_expiry: extractValue(text, 'Date of Expiry', 'Date of Issue'),\n    };\n  \n    return jsonData;\n  };\n  \n  \n\n  const extractValue = (lines, regex) => {\n    const line = lines.find((line) => regex.test(line));\n    return line ? line.trim() : \"\";\n  };\n\n  return (\n    <div>\n      <h1>Vision API OCR</h1>\n      <input type=\"file\" accept=\"image/*\" onChange={handleFileChange} />\n      <button onClick={handleUpload}>Upload and Process</button>\n      <div>\n        <h2>Extracted Text:</h2>\n        <pre>{extractedText}</pre>\n        <h2>JSON Data:</h2>\n        <pre>{JSON.stringify(jsonData, null, 2)}</pre>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
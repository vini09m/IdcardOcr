{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91635\\\\Desktop\\\\PythonEvn\\\\env\\\\detection\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [extractedText, setExtractedText] = useState('');\n  const handleFileChange = e => {\n    setSelectedFile(e.target.files[0]);\n  };\n  const handleUpload = () => {\n    if (!selectedFile) return;\n    const formData = new FormData();\n    formData.append('image', selectedFile);\n    axios.post('http://localhost:5000/upload', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(response => {\n      const extractedText = response.data.text;\n      const jsonData = parseExtractedText(extractedText);\n      setExtractedText(JSON.stringify(jsonData, null, 2));\n    }).catch(error => console.error(error));\n  };\n  const parseExtractedText = text => {\n    const lines = text.split('\\n');\n    const jsonData = {\n      identification_number: lines[4],\n      name: lines[9] + ' ' + lines[10],\n      last_name: lines[13],\n      date_of_birth: lines[18],\n      date_of_issue: lines[30],\n      date_of_expiry: lines[41]\n    };\n    return jsonData;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Vision API OCR\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload and Process\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Extracted Text:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: extractedText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"a7YcPr8yYa6UVPgoxrDrLIGLWQw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","selectedFile","setSelectedFile","extractedText","setExtractedText","handleFileChange","e","target","files","handleUpload","formData","FormData","append","post","headers","then","response","data","text","jsonData","parseExtractedText","JSON","stringify","catch","error","console","lines","split","identification_number","name","last_name","date_of_birth","date_of_issue","date_of_expiry","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/91635/Desktop/PythonEvn/env/detection/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [extractedText, setExtractedText] = useState('');\n\n  const handleFileChange = (e) => {\n    setSelectedFile(e.target.files[0]);\n  };\n\n  const handleUpload = () => {\n    if (!selectedFile) return;\n\n    const formData = new FormData();\n    formData.append('image', selectedFile);\n\n    axios.post('http://localhost:5000/upload', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    })\n      .then(response => {\n        const extractedText = response.data.text;\n        const jsonData = parseExtractedText(extractedText);\n        setExtractedText(JSON.stringify(jsonData, null, 2));\n      })\n      .catch(error => console.error(error));\n  };\n\n  const parseExtractedText = (text) => {\n    const lines = text.split('\\n');\n    const jsonData = {\n      identification_number: lines[4],\n      name: lines[9] + ' ' + lines[10],\n      last_name: lines[13],\n      date_of_birth: lines[18],\n      date_of_issue: lines[30],\n      date_of_expiry: lines[41],\n    };\n\n    return jsonData;\n  };\n\n  return (\n    <div>\n      <h1>Vision API OCR</h1>\n      <input type=\"file\" accept=\"image/*\" onChange={handleFileChange} />\n      <button onClick={handleUpload}>Upload and Process</button>\n      <div>\n        <h2>Extracted Text:</h2>\n        <pre>{extractedText}</pre>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMU,gBAAgB,GAAIC,CAAC,IAAK;IAC9BJ,eAAe,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EACpC,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAI,CAACR,YAAY,EAAE;IAEnB,MAAMS,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEX,YAAY,CAAC;IAEtCL,KAAK,CAACiB,IAAI,CAAC,8BAA8B,EAAEH,QAAQ,EAAE;MACnDI,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC,CACCC,IAAI,CAACC,QAAQ,IAAI;MAChB,MAAMb,aAAa,GAAGa,QAAQ,CAACC,IAAI,CAACC,IAAI;MACxC,MAAMC,QAAQ,GAAGC,kBAAkB,CAACjB,aAAa,CAAC;MAClDC,gBAAgB,CAACiB,IAAI,CAACC,SAAS,CAACH,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;IACrD,CAAC,CAAC,CACDI,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EACzC,CAAC;EAED,MAAMJ,kBAAkB,GAAIF,IAAI,IAAK;IACnC,MAAMQ,KAAK,GAAGR,IAAI,CAACS,KAAK,CAAC,IAAI,CAAC;IAC9B,MAAMR,QAAQ,GAAG;MACfS,qBAAqB,EAAEF,KAAK,CAAC,CAAC,CAAC;MAC/BG,IAAI,EAAEH,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGA,KAAK,CAAC,EAAE,CAAC;MAChCI,SAAS,EAAEJ,KAAK,CAAC,EAAE,CAAC;MACpBK,aAAa,EAAEL,KAAK,CAAC,EAAE,CAAC;MACxBM,aAAa,EAAEN,KAAK,CAAC,EAAE,CAAC;MACxBO,cAAc,EAAEP,KAAK,CAAC,EAAE;IAC1B,CAAC;IAED,OAAOP,QAAQ;EACjB,CAAC;EAED,oBACErB,OAAA;IAAAoC,QAAA,gBACEpC,OAAA;MAAAoC,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBxC,OAAA;MAAOyC,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC,SAAS;MAACC,QAAQ,EAAEpC;IAAiB;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClExC,OAAA;MAAQ4C,OAAO,EAAEjC,YAAa;MAAAyB,QAAA,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC1DxC,OAAA;MAAAoC,QAAA,gBACEpC,OAAA;QAAAoC,QAAA,EAAI;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxBxC,OAAA;QAAAoC,QAAA,EAAM/B;MAAa;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACtC,EAAA,CApDQD,GAAG;AAAA4C,EAAA,GAAH5C,GAAG;AAsDZ,eAAeA,GAAG;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}